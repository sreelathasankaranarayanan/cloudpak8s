{"componentChunkName":"component---src-pages-mcm-cp-4-mcm-governance-risk-index-mdx","path":"/mcm/cp4mcm_governance_risk/","result":{"pageContext":{"frontmatter":{"title":"MCM - Governance and Risk","weight":340},"relativePagePath":"/mcm/cp4mcm_governance_risk/index.mdx","titleType":"page","MdxNode":{"id":"4638ee65-05fc-51c0-94c0-d172c3ac86e5","children":[],"parent":"5f907469-0052-56f6-af5d-d8ee8e5f8df3","internal":{"content":"---\ntitle: MCM - Governance and Risk\nweight: 340\n\n---\n\n## Introduction\n\nHere how we can define and review policy definitions and see the compliance state of managed clusters.\n\n### Create Simple Policy\n\nLet's create a new policy\n\nOpen MCM Web Console https://icp-console.apps.res-cp4mcm.ocp.csplab.local/multicloud/policies/create\n\nNavigate to Menu -> Govern risk.  Policies This view displays the policies that have been created and the dashboard of policy compliance for each cluster.\n\n   ![Image](/assets/img/cp4mcm/PolicyCreate.png)\n\nClick on Create policy button.\n\n   ![Image](/assets/img/cp4mcm/cp4mcm_2.png)\n\nFill the values as specified in the table below:\n\n|      Field Name      | Value                                                        |\n| :------------------: | :----------------------------------------------------------- |\n|         Name         | policy-namespace                                             |\n|      Namespace       | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n|    Specifications    | Choose: “Namespace”                                          |\n|   Cluster Binding    | Choose name: “local-cluster”                                 |\n|      Standards       | Choose: \"FISMA\"                                              |\n|      Categories      | Choose: \"SystemAndInformationIntegrity\"                      |\n|       Controls       | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n|    Disable Policy    | Leave as is                                                  |\n\nIn the **yaml file section**, on the right, change **prod** to **k8demo**.\n\nChanging the namespace will change the Policy Specifications to Custom Specifications as below. Notice that the policy is set to “**inform**” rather than “**enforce**”.\n\n   ![Image](/assets/img/cp4mcm/clip_image001.png)\n\n   ![Image](/assets/img/cp4mcm/clip_image002.png)\n\nUse the button Create to create your new policy.\n\nIf you are no redirected automatically navigate **to Menu** -> **Govern risk** to return to the Dashboard.\n\nIn few seconds, the policy controller will check if the namespace **k8demo** is present and provides information regarding the current compliance of the policies.\n\nRemember, you didn’t **enforce** this policy. Instead we specified **inform.** As such, the Governance and risk view displays a policy violation in our cluster, as illustrated below.\n\n   ![Image](/assets/img/cp4mcm/clip_image004.png)\n\nUse the Cluster Violation link ![Image](/assets/img/cp4mcm/clip_image005.png) to find which cluster is violating the policy.\n\nThe **local-cluster** cluster is in violation of the policy which requires a namespace called “k8demo” to exist.\n\nThe local-cluster cluster is our cluster, and the same cluster that verified “k8sdemo” namespace does not exist. Hence it shows that there is no namespace k8demo in the cluster.\n\n![Image](/assets/img/cp4mcm/clip_image006.png)\n\nVerify the k8demo namespace still does not exist.\n\n~~~ shell\noc get projects\n~~~\n\nThere should NOT be a namespace named k8demo listed, which indicates the policy did not ENFORCE it to be created.\n\nChange the “policy-namespce” policy to be enforced\n\nWhen a policy is in “**enforce**” mode, the namespace will automatically be created, if it does not exist, thereby enforcing the cluster into compliance.\n\na.  In the **policies** view, select **POLICY VIOLATIONS**\n\n![Image](/assets/img/cp4mcm/clip_image008.png)\n\nb.  Then, select the policy named “policy-namespace” and go to **YAML** view\n\nc.   Click on the ![Image](/assets/img/cp4mcm/clip_image009.png) button to go into edit mode.\n\nd.  Change the value of “**remediationAction: inform**” to “**remediationAction: enforce**”\n\ne.  Click the ![Image](/assets/img/cp4mcm/clip_image010.png) to submit the change\n\n![Image](/assets/img/cp4mcm/clip_image011.png)\n\nSelect the **policy-namespace** link. A few seconds later, the policy violation will be gone away.\n\n![Image](/assets/img/cp4mcm/clip_image012.png)\n\nYou also can validate the same from the **Violations** view.\n\nRun the command below command and ensure that the k8demo namespace has been created in the cluster.\n\n~~~ shell\noc get project  | grep k8demo\n~~~\n\n!![Image](/assets/img/cp4mcm/clip_image014.png)\n\nTry deleting the namespace and check how is being created automatically again.\n\n~~~ shell\noc delete project  k8demo\n~~~\n\n### Namespace Policy\n\nThis policy will check the Cluster Selector, and verify if a namespace named “policy-namespace-k8demo” exists, if the Enforce if supported field is true, the namespace will be automatically created on the selected cluster, if false then the violation/compliance of the policy will be reported on the dashboard.\n\nThe policy controller will check if the namespace k8demo is present and provides information regarding the current compliance of the policies.\n\nCreate policy by setting the following values:\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Namespace”                                          |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n\n![Image](/assets/img/cp4mcm/prodnamespace.png)\n\nHere is the YAML that this generates.\n\n![Image](/assets/img/cp4mcm/prodnamespaceyaml.png)\n\nAs we have set this policy to 'enforce' this will create a 'prod' namespace on our targeted clusters.\n\n  ~~~ shell\n  oc get namespace | grep -i prod\n  ~~~\n\nCreate some more policies and then explore the console that is used to give a high level view of the cluster compliance with your defined Policies.\n\nStart with a high level view of the cluster policy compliance.\n\n![Image](/assets/img/cp4mcm/PolicySummary.png)\n\nThen by `category` look at which clusters are found to be not compliant with named policies.\n\n![Image](/assets/img/cp4mcm/ClusterSummary2.png)\n\n\n![Image](/assets/img/cp4mcm/PolicyCollection.png)\n\nFinally, look at all of the policy compliance associated with you collection of `PCI` compliance policies.\n\n![Image](/assets/img/cp4mcm/SISummary.png)\n\n\n### Network Policy\n\nThe Network Policy is used to control (block) network traffic from other pods.\n\nConfigure the new network policy according to the table below\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | Policy-network-policy                                        |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “NetworkPolicy”                                      |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n\n![Image](/assets/img/cp4mcm/cp4mcm_clipimage00078.png)\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-networkpolicy\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"default\"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        kind: NetworkPolicy # deny network request\n        apiVersion: networking.k8s.io/v1\n        metadata:\n          name: deny-from-other-namespaces\n        spec:\n          podSelector:\n            matchLabels:\n          ingress:\n          - from:\n            - podSelector: {} # accept ingress from all pods within this namespace only\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-networkpolicy\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-networkpolicy\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-networkpolicy\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-networkpolicy\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n\nYou can validate the network policy that is created on the selected namespace.\n\n Using the CLI, run the following command to get the network policies for the namespace\n\n~~~ shell\noc get networkpolicies -n <namespace>\n~~~\n\nThis kind of  policy can be used to allow or deny the communication between pods living on different \t\tnamespaces.\n\n### \t Pod must exist in a given namespace Policy\n\nThis kind of policy validates if a pod is present in a given namespace.\n\nConfigure the new policy, requiring pod be present, according to the table below\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Pod-nginx” must exist                               |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\nNotice you can change the name of the pod and the image on the yaml section to create any kind of pod, make sure of write a valid value on the image parameter.\n\n Also you can change in the namespaces section, the namespaces you want your policy takes effect.\n\n![Image](/assets/img/cp4mcm/clip_image00122.png)\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-pod\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring, PR.IP Information Protection Processes and Procedures, PR.PT Protective Technology\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity, PR.IP-1 Baseline configuration, PR.PT-3 Least Functionality\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"residency2020\"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        apiVersion: v1\n        kind: Pod # nginx pod must exist\n        metadata:\n          name: nginx-pod\n        spec:\n          containers:\n          - image: nginx:1.7.9\n            name: nginx\n            ports:\n            - containerPort: 80\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-pod\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-pod\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-pod\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-pod\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n\n### Limits memory range for a namespace Policy\n\nConfigure the new policy, enforcing quota limits, according to the table below\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Limitrange-limit memory usage”                      |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n To validate the quota is created on the selected namespace\n\n![Image](/assets/img/cp4mcm/clip_image0034.png)\n\n~~~ shell\noc get networkpolicies -n <namespace>\n~~~\n~~~ shell\noc -n <namespace> get limits\n~~~\n~~~ shell\noc -n <namespace> get limits –o yaml\n~~~\n\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-limitrange\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring, PR.IP Information Protection Processes and Procedures, PR.PT Protective Technology\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity, PR.IP-1 Baseline configuration, PR.PT-3 Least Functionality\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"residency2020\"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        apiVersion: v1\n        kind: LimitRange # limit memory usage\n        metadata:\n          name: mem-limit-range\n        spec:\n          limits:\n          - default:\n              memory: 512Mi\n            defaultRequest:\n              memory: 256Mi\n            type: Container\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-limitrange\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-limitrange\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-limitrange\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-limitrange\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n\n### Mutation Policy\n\nA mutation policy contains the specifications of which pods to monitor and what action to take if a mutation is detected, for example if this policy is created and configured for an specific namespace, and you change something (such as edit or delete a file) in a running pod of that namespace, a violation will be notified, if the policy is enforced, the pod will be restarted.\n\n\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Mutation Policy”                                    |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n\n![Image](/assets/img/cp4mcm/cp4mcm_clipimage0008.png)\n\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-mutationpolicy\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"default\"]\n  policy-templates:\n    - objectDefinition:\n        apiVersion: policies.ibm.com/v1alpha1\n        kind: MutationPolicy # no mutation allowed\n        metadata:\n          name: policy-mutationpolicy-example\n        spec:\n          namespaceSelector:\n            include: [\"default\",\"kube-*\"]\n            exclude: [\"kube-system\"]\n          remediationAction: inform # enforce or inform\n          severity: medium\n          conditions:\n            ownership: [\"ReplicaSet\", \"Deployment\", \"DeamonSet\", \"ReplicationController\", \"none\"]\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-mutationpolicy\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-mutationpolicy\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-mutationpolicy\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-mutationpolicy\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n","type":"Mdx","contentDigest":"bde65e77b51c77e300e46f1a232821b8","counter":293,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"MCM - Governance and Risk","weight":340},"exports":{},"rawBody":"---\ntitle: MCM - Governance and Risk\nweight: 340\n\n---\n\n## Introduction\n\nHere how we can define and review policy definitions and see the compliance state of managed clusters.\n\n### Create Simple Policy\n\nLet's create a new policy\n\nOpen MCM Web Console https://icp-console.apps.res-cp4mcm.ocp.csplab.local/multicloud/policies/create\n\nNavigate to Menu -> Govern risk.  Policies This view displays the policies that have been created and the dashboard of policy compliance for each cluster.\n\n   ![Image](/assets/img/cp4mcm/PolicyCreate.png)\n\nClick on Create policy button.\n\n   ![Image](/assets/img/cp4mcm/cp4mcm_2.png)\n\nFill the values as specified in the table below:\n\n|      Field Name      | Value                                                        |\n| :------------------: | :----------------------------------------------------------- |\n|         Name         | policy-namespace                                             |\n|      Namespace       | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n|    Specifications    | Choose: “Namespace”                                          |\n|   Cluster Binding    | Choose name: “local-cluster”                                 |\n|      Standards       | Choose: \"FISMA\"                                              |\n|      Categories      | Choose: \"SystemAndInformationIntegrity\"                      |\n|       Controls       | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n|    Disable Policy    | Leave as is                                                  |\n\nIn the **yaml file section**, on the right, change **prod** to **k8demo**.\n\nChanging the namespace will change the Policy Specifications to Custom Specifications as below. Notice that the policy is set to “**inform**” rather than “**enforce**”.\n\n   ![Image](/assets/img/cp4mcm/clip_image001.png)\n\n   ![Image](/assets/img/cp4mcm/clip_image002.png)\n\nUse the button Create to create your new policy.\n\nIf you are no redirected automatically navigate **to Menu** -> **Govern risk** to return to the Dashboard.\n\nIn few seconds, the policy controller will check if the namespace **k8demo** is present and provides information regarding the current compliance of the policies.\n\nRemember, you didn’t **enforce** this policy. Instead we specified **inform.** As such, the Governance and risk view displays a policy violation in our cluster, as illustrated below.\n\n   ![Image](/assets/img/cp4mcm/clip_image004.png)\n\nUse the Cluster Violation link ![Image](/assets/img/cp4mcm/clip_image005.png) to find which cluster is violating the policy.\n\nThe **local-cluster** cluster is in violation of the policy which requires a namespace called “k8demo” to exist.\n\nThe local-cluster cluster is our cluster, and the same cluster that verified “k8sdemo” namespace does not exist. Hence it shows that there is no namespace k8demo in the cluster.\n\n![Image](/assets/img/cp4mcm/clip_image006.png)\n\nVerify the k8demo namespace still does not exist.\n\n~~~ shell\noc get projects\n~~~\n\nThere should NOT be a namespace named k8demo listed, which indicates the policy did not ENFORCE it to be created.\n\nChange the “policy-namespce” policy to be enforced\n\nWhen a policy is in “**enforce**” mode, the namespace will automatically be created, if it does not exist, thereby enforcing the cluster into compliance.\n\na.  In the **policies** view, select **POLICY VIOLATIONS**\n\n![Image](/assets/img/cp4mcm/clip_image008.png)\n\nb.  Then, select the policy named “policy-namespace” and go to **YAML** view\n\nc.   Click on the ![Image](/assets/img/cp4mcm/clip_image009.png) button to go into edit mode.\n\nd.  Change the value of “**remediationAction: inform**” to “**remediationAction: enforce**”\n\ne.  Click the ![Image](/assets/img/cp4mcm/clip_image010.png) to submit the change\n\n![Image](/assets/img/cp4mcm/clip_image011.png)\n\nSelect the **policy-namespace** link. A few seconds later, the policy violation will be gone away.\n\n![Image](/assets/img/cp4mcm/clip_image012.png)\n\nYou also can validate the same from the **Violations** view.\n\nRun the command below command and ensure that the k8demo namespace has been created in the cluster.\n\n~~~ shell\noc get project  | grep k8demo\n~~~\n\n!![Image](/assets/img/cp4mcm/clip_image014.png)\n\nTry deleting the namespace and check how is being created automatically again.\n\n~~~ shell\noc delete project  k8demo\n~~~\n\n### Namespace Policy\n\nThis policy will check the Cluster Selector, and verify if a namespace named “policy-namespace-k8demo” exists, if the Enforce if supported field is true, the namespace will be automatically created on the selected cluster, if false then the violation/compliance of the policy will be reported on the dashboard.\n\nThe policy controller will check if the namespace k8demo is present and provides information regarding the current compliance of the policies.\n\nCreate policy by setting the following values:\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Namespace”                                          |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n\n![Image](/assets/img/cp4mcm/prodnamespace.png)\n\nHere is the YAML that this generates.\n\n![Image](/assets/img/cp4mcm/prodnamespaceyaml.png)\n\nAs we have set this policy to 'enforce' this will create a 'prod' namespace on our targeted clusters.\n\n  ~~~ shell\n  oc get namespace | grep -i prod\n  ~~~\n\nCreate some more policies and then explore the console that is used to give a high level view of the cluster compliance with your defined Policies.\n\nStart with a high level view of the cluster policy compliance.\n\n![Image](/assets/img/cp4mcm/PolicySummary.png)\n\nThen by `category` look at which clusters are found to be not compliant with named policies.\n\n![Image](/assets/img/cp4mcm/ClusterSummary2.png)\n\n\n![Image](/assets/img/cp4mcm/PolicyCollection.png)\n\nFinally, look at all of the policy compliance associated with you collection of `PCI` compliance policies.\n\n![Image](/assets/img/cp4mcm/SISummary.png)\n\n\n### Network Policy\n\nThe Network Policy is used to control (block) network traffic from other pods.\n\nConfigure the new network policy according to the table below\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | Policy-network-policy                                        |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “NetworkPolicy”                                      |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n\n![Image](/assets/img/cp4mcm/cp4mcm_clipimage00078.png)\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-networkpolicy\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"default\"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        kind: NetworkPolicy # deny network request\n        apiVersion: networking.k8s.io/v1\n        metadata:\n          name: deny-from-other-namespaces\n        spec:\n          podSelector:\n            matchLabels:\n          ingress:\n          - from:\n            - podSelector: {} # accept ingress from all pods within this namespace only\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-networkpolicy\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-networkpolicy\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-networkpolicy\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-networkpolicy\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n\nYou can validate the network policy that is created on the selected namespace.\n\n Using the CLI, run the following command to get the network policies for the namespace\n\n~~~ shell\noc get networkpolicies -n <namespace>\n~~~\n\nThis kind of  policy can be used to allow or deny the communication between pods living on different \t\tnamespaces.\n\n### \t Pod must exist in a given namespace Policy\n\nThis kind of policy validates if a pod is present in a given namespace.\n\nConfigure the new policy, requiring pod be present, according to the table below\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Pod-nginx” must exist                               |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\nNotice you can change the name of the pod and the image on the yaml section to create any kind of pod, make sure of write a valid value on the image parameter.\n\n Also you can change in the namespaces section, the namespaces you want your policy takes effect.\n\n![Image](/assets/img/cp4mcm/clip_image00122.png)\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-pod\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring, PR.IP Information Protection Processes and Procedures, PR.PT Protective Technology\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity, PR.IP-1 Baseline configuration, PR.PT-3 Least Functionality\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"residency2020\"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        apiVersion: v1\n        kind: Pod # nginx pod must exist\n        metadata:\n          name: nginx-pod\n        spec:\n          containers:\n          - image: nginx:1.7.9\n            name: nginx\n            ports:\n            - containerPort: 80\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-pod\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-pod\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-pod\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-pod\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n\n### Limits memory range for a namespace Policy\n\nConfigure the new policy, enforcing quota limits, according to the table below\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Limitrange-limit memory usage”                      |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n To validate the quota is created on the selected namespace\n\n![Image](/assets/img/cp4mcm/clip_image0034.png)\n\n~~~ shell\noc get networkpolicies -n <namespace>\n~~~\n~~~ shell\noc -n <namespace> get limits\n~~~\n~~~ shell\noc -n <namespace> get limits –o yaml\n~~~\n\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-limitrange\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring, PR.IP Information Protection Processes and Procedures, PR.PT Protective Technology\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity, PR.IP-1 Baseline configuration, PR.PT-3 Least Functionality\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"residency2020\"]\n  object-templates:\n    - complianceType: musthave\n      objectDefinition:\n        apiVersion: v1\n        kind: LimitRange # limit memory usage\n        metadata:\n          name: mem-limit-range\n        spec:\n          limits:\n          - default:\n              memory: 512Mi\n            defaultRequest:\n              memory: 256Mi\n            type: Container\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-limitrange\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-limitrange\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-limitrange\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-limitrange\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n\n### Mutation Policy\n\nA mutation policy contains the specifications of which pods to monitor and what action to take if a mutation is detected, for example if this policy is created and configured for an specific namespace, and you change something (such as edit or delete a file) in a running pod of that namespace, a violation will be notified, if the policy is enforced, the pod will be restarted.\n\n\n\n| Field Name           | Value                                                        |\n| :------------------- | :----------------------------------------------------------- |\n| Name                 | policy-namespace                                             |\n| Namespace            | Choose: Namespace-must have namespace ‘prod’ Note: You will modify the name prod to k8demo. Selecting this will provide a template to have custom namespace policy definition |\n| Specifications       | Choose: “Mutation Policy”                                    |\n| Cluster Binding      | Choose name: “local-cluster”                                 |\n| Standards            | Choose: \"NIST-CSF\"                                           |\n| Categories           | Choose: \"SystemAndInformationIntegrity\"                      |\n| Controls             | Choose: \"Mutation Advisor\"                                   |\n| Enforce if Supported | Leave as is                                                  |\n| Disable Policy       | Leave as is                                                  |\n\n\n![Image](/assets/img/cp4mcm/cp4mcm_clipimage0008.png)\n\n~~~ yaml\napiVersion: policy.mcm.ibm.com/v1alpha1\nkind: Policy\nmetadata:\n  name: policy-mutationpolicy\n  namespace: residency2020\n  annotations:\n    policy.mcm.ibm.com/standards: NIST-CSF\n    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control, DE.CM Security Continuous Monitoring\n    policy.mcm.ibm.com/controls: PR.AC-5 Network Integrity, DE.CM-7 Monitoring for unauthorized activity\nspec:\n  complianceType: musthave\n  remediationAction: inform\n  disabled: false\n  namespaces:\n    exclude: [\"kube-*\"]\n    include: [\"default\"]\n  policy-templates:\n    - objectDefinition:\n        apiVersion: policies.ibm.com/v1alpha1\n        kind: MutationPolicy # no mutation allowed\n        metadata:\n          name: policy-mutationpolicy-example\n        spec:\n          namespaceSelector:\n            include: [\"default\",\"kube-*\"]\n            exclude: [\"kube-system\"]\n          remediationAction: inform # enforce or inform\n          severity: medium\n          conditions:\n            ownership: [\"ReplicaSet\", \"Deployment\", \"DeamonSet\", \"ReplicationController\", \"none\"]\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementBinding\nmetadata:\n  name: binding-policy-mutationpolicy\n  namespace: residency2020\nplacementRef:\n  name: placement-policy-mutationpolicy\n  kind: PlacementPolicy\n  apiGroup: mcm.ibm.com\nsubjects:\n- name: policy-mutationpolicy\n  kind: Policy\n  apiGroup: policy.mcm.ibm.com\n---\napiVersion: mcm.ibm.com/v1alpha1\nkind: PlacementPolicy\nmetadata:\n  name: placement-policy-mutationpolicy\n  namespace: residency2020\nspec:\n  clusterLabels:\n    matchExpressions:\n~~~\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/cloudpak8s/src/pages/mcm/cp4mcm_governance_risk/index.mdx"}}}}